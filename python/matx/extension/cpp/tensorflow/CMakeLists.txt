cmake_minimum_required(VERSION 3.2)
project(matxscript_tensorflow)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# fix tensorflow-python missing some header files
ADD_DEFINITIONS(-DMATX_SCRIPT_TENSORFLOW_PYTHON_MODE)

IF (NOT CMAKE_MATX_COMPILE_FLAGS)
    MESSAGE(STATUS "CMAKE_MATX_COMPILE_FLAGS has not been set, use setup.py to install.")
    RETURN(-1)
ENDIF()
MESSAGE(STATUS "MatxScript Compile Flags: ${CMAKE_MATX_COMPILE_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_MATX_COMPILE_FLAGS}")

IF (NOT CMAKE_MATX_LINK_FLAGS)
    MESSAGE(STATUS "CMAKE_MATX_LINK_FLAGS has not been set, use setup.py to install.")
    RETURN(-1)
ENDIF()
MESSAGE(STATUS "MatxScript Link Flags: ${CMAKE_MATX_LINK_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_MATX_LINK_FLAGS}")

IF (NOT CMAKE_TENSORFLOW_COMPILE_FLAGS)
    MESSAGE(STATUS "TensorFlow get_compile_flags failed!!!.")
    RETURN(-1)
ENDIF()
MESSAGE(STATUS "TensorFlow Compile Flags: ${CMAKE_TENSORFLOW_COMPILE_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_TENSORFLOW_COMPILE_FLAGS}")

IF (NOT CMAKE_TENSORFLOW_LINK_FLAGS)
    MESSAGE(STATUS "TensorFlow get_link_flags failed!!!.")
    RETURN(-1)
ENDIF()
MESSAGE(STATUS "TensorFlow Link Flags: ${CMAKE_TENSORFLOW_LINK_FLAGS}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_TENSORFLOW_LINK_FLAGS}")

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src/)

SET(CMAKE_CXX_FLAGS "-g -O2 -std=c++14 -fPIC -w -fpermissive -pthread ${CMAKE_CXX_FLAGS}")
MESSAGE(STATUS "CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")

FILE(GLOB_RECURSE MATXSCRIPT_TENSORFLOW_SRCS RELATIVE ${CMAKE_SOURCE_DIR}  "src/*.cc")

ADD_LIBRARY(matx_tensorflow+tensorflow${CMAKE_TENSORFLOW_VERSION} SHARED ${MATXSCRIPT_TENSORFLOW_SRCS})
