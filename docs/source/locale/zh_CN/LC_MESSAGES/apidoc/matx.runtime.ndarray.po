# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Bytedance Inc.
# This file is distributed under the same license as the Matxscript package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matxscript \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-20 16:33-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/apidoc/matx.runtime.ndarray.rst:2
msgid "matx.runtime.ndarray module"
msgstr ""

#~ msgid "Runtime NDArray API"
#~ msgstr ""

#~ msgid "Bases: :py:class:`~matx.runtime.object.Object`"
#~ msgstr ""

#~ msgid "Lightweight NDArray implementation for matx runtime"
#~ msgstr ""

#~ msgid ""
#~ "The structure is currently just a "
#~ "container for a multi-dimensional array,"
#~ " without defining various types of "
#~ "transformations and arithmetic methods. The"
#~ " goal of the structure is to "
#~ "serve as a bridge tool and other"
#~ " machine learning frameworks (pytorch "
#~ "tensorflow) for the conversion of "
#~ "multidimensional arrays"
#~ msgstr ""

#~ msgid "Parameters"
#~ msgstr ""

#~ msgid "Constructing the contents of an NDArray"
#~ msgstr ""

#~ msgid "Shape of the constructed NDArray"
#~ msgstr ""

#~ msgid ""
#~ "The type of the constructed NDArray "
#~ "element, supporting \"int32\" \"int64\" "
#~ "\"float32\" \"float64\""
#~ msgstr ""

#~ msgid "Construction method 1"
#~ msgstr ""

#~ msgid ""
#~ "arr is a one-dimensional List, the"
#~ " shape is not empty, producing "
#~ "NDArray with the content of arr "
#~ "and the shape of the given shape"
#~ msgstr ""

#~ msgid "Examples:"
#~ msgstr ""

#~ msgid "Construction method 2"
#~ msgstr ""

#~ msgid ""
#~ "arr is a List of arbitrary "
#~ "dimensions, shape is an empty List, "
#~ "producing NDArray with the same shape"
#~ " as arr and the same content as"
#~ " arr"
#~ msgstr ""

#~ msgid "Construction method 3"
#~ msgstr ""

#~ msgid ""
#~ "arr is empty, shape is not empty,"
#~ " return a NDArray corresponding to "
#~ "the random initialization content of the"
#~ " shape"
#~ msgstr ""

#~ msgid ""
#~ "Construct a numpy.ndarray from the "
#~ "current NDArray. Note! This method "
#~ "cannot be compiled for use in "
#~ "matx.script"
#~ msgstr ""

#~ msgid "Returns"
#~ msgstr ""

#~ msgid "numpy.ndarray"
#~ msgstr ""

#~ msgid "Examples"
#~ msgstr ""

#~ msgid ""
#~ "Returns a copy of the ndarray with"
#~ " contiguous memory if the adarray is"
#~ " not contiguous. Otherwise, the original"
#~ " one is returned."
#~ msgstr ""

#~ msgid "matx.NDArray"
#~ msgstr ""

#~ msgid "Returns the current NDArray device as a string"
#~ msgstr ""

#~ msgid ""
#~ "Returns the number of array dimensions."
#~ " Unlike numpy, this is a method "
#~ "and not a property."
#~ msgstr ""

#~ msgid "int"
#~ msgstr ""

#~ msgid "Returns the dtype of the current NDArray as a string"
#~ msgstr ""

#~ msgid "\"int32\" \"int64\" \"float32\" \"float64\""
#~ msgstr ""

#~ msgid "Return type"
#~ msgstr ""

#~ msgid ""
#~ "Copy data from a numpy.ndarray to "
#~ "the current NDArray, requiring both to"
#~ " have the same size."
#~ msgstr ""

#~ msgid "Note! This method cannot be compiled for use in matx.script"
#~ msgstr ""

#~ msgid "Raises"
#~ msgstr ""

#~ msgid "self"
#~ msgstr ""

#~ msgid ""
#~ "Returns a int indicating if the "
#~ "underlying data is contiguous in memory."
#~ " The continuity of array changes when"
#~ " its stride changes."
#~ msgstr ""

#~ msgid ""
#~ "Returns the current NDArray's shape, "
#~ "unlike numpy, this is a method and"
#~ " not a property"
#~ msgstr ""

#~ msgid "matx.List"
#~ msgstr ""

#~ msgid ""
#~ "Returns List of bytes to step in"
#~ " each dimension when traversing an "
#~ "array."
#~ msgstr ""

#~ msgid "Convert a NDArray to a matx.List corresponding to the shape"
#~ msgstr ""

#~ msgid "convert NDArray to torch.Tensor, make sure NDArray is synchronized"
#~ msgstr ""

#~ msgid "torch.Tensor"
#~ msgstr ""

#~ msgid "Reverse or permute the axes of an array"
#~ msgstr ""

#~ msgid "Returns :"
#~ msgstr ""

#~ msgid "the given with its axes permuted. A view is returned whenever possible"
#~ msgstr ""

#~ msgid "Supports addition between NDArray and NDArray"
#~ msgstr ""

#~ msgid "Supports addition between NDArray and numbers"
#~ msgstr ""

#~ msgid ""
#~ "Supports "
#~ "broadcasting(https://numpy.org/doc/stable/user/basics.broadcasting.html)"
#~ msgstr ""

#~ msgid "Specific use of the interface: matx.array.add"
#~ msgstr ""

#~ msgid "Left operand"
#~ msgstr ""

#~ msgid "Right operand"
#~ msgstr ""

#~ msgid ""
#~ "Concatenates the given sequence of seq"
#~ " tensors in the given dimension, "
#~ "Similar to numpy.concatenate"
#~ msgstr ""

#~ msgid "Specific use of the interface: matx.array.concatenate"
#~ msgstr ""

#~ msgid "dim"
#~ msgstr ""

#~ msgid "Support division between NDArray and NDArray"
#~ msgstr ""

#~ msgid "Support division between NDArray and numbers"
#~ msgstr ""

#~ msgid "Specific use of the interface: matx.array.div"
#~ msgstr ""

#~ msgid ""
#~ "Produce an array from a DLPack "
#~ "tensor without memory copy. Retreives "
#~ "the underlying DLPack tensor's pointer "
#~ "to create an array from the data."
#~ " Removes the original DLPack tensor's "
#~ "destructor as now the array is "
#~ "responsible for destruction."
#~ msgstr ""

#~ msgid "Input DLManagedTensor, can only be consumed once."
#~ msgstr ""

#~ msgid "**arr** -- The array view of the tensor data."
#~ msgstr ""

#~ msgid "Construct a module method for matx.NDArray from numpy.ndarray."
#~ msgstr ""

#~ msgid "The device context to create the array)"
#~ msgstr ""

#~ msgid "Support multiplication between NDArray and NDArray"
#~ msgstr ""

#~ msgid "Support multiplication between NDArray and numbers"
#~ msgstr ""

#~ msgid ""
#~ "support "
#~ "broadcasting(https://numpy.org/doc/stable/user/basics.broadcasting.html)"
#~ msgstr ""

#~ msgid "Specific use of the interface: matx.array.mul"
#~ msgstr ""

#~ msgid ""
#~ "Returns a NDArray filled with random "
#~ "numbers from a uniform distribution on"
#~ " the interval[0, 1), similar to "
#~ "numpy.rando.rand"
#~ msgstr ""

#~ msgid "Analogous to: matx.array.rand"
#~ msgstr ""

#~ msgid "["
#~ msgstr ""

#~ msgid "[ 0.145728 0.357696 0.574777 ] [ 0.437011 0.0172242 0.704895 ]"
#~ msgstr ""

#~ msgid "]"
#~ msgstr ""

#~ msgid "Concatenates a sequence of NDArray along a new dimension."
#~ msgstr ""

#~ msgid "Specific use of the interface: matx.array.stack"
#~ msgstr ""

#~ msgid "Support subtraction between NDArray and NDArray"
#~ msgstr ""

#~ msgid "Support subtraction between NDArray and numbers"
#~ msgstr ""

#~ msgid ""
#~ "Support "
#~ "broadcasting(https://numpy.org/doc/stable/user/basics.broadcasting.html)"
#~ msgstr ""

#~ msgid "Specific use of the interface: matx.array.sub"
#~ msgstr ""

