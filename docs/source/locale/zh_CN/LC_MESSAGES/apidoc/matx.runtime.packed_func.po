# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Bytedance Inc.
# This file is distributed under the same license as the Matxscript package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Matxscript \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-20 16:33-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/apidoc/matx.runtime.packed_func.rst:2
msgid "matx.runtime.packed\\_func module"
msgstr ""

#~ msgid "Packed Function namespace."
#~ msgstr ""

#~ msgid "Bases: :py:class:`~matx_script_api.PackedFuncBase`"
#~ msgstr ""

#~ msgid "The PackedFunc object used in MATX."
#~ msgstr ""

#~ msgid ""
#~ "Function plays an key role to "
#~ "bridge front and backend in MATX. "
#~ "Function provide a type-erased "
#~ "interface, you can call function with"
#~ " positional arguments."
#~ msgstr ""

#~ msgid ""
#~ "The compiled module returns Function. "
#~ "MATX backend also registers and exposes"
#~ " its API as Functions."
#~ msgstr ""

#~ msgid ""
#~ "The following are list of common "
#~ "usage scenario of matx.runtime.PackedFunc."
#~ msgstr ""

#~ msgid "Automatic exposure of C++ API into python"
#~ msgstr ""

#~ msgid "To call PackedFunc from python side"
#~ msgstr ""

#~ msgid "To call python callbacks to inspect results in generated code"
#~ msgstr ""

#~ msgid "Bring python hook into C++ backend"
#~ msgstr ""

#~ msgid ":obj:`matx.register_func`"
#~ msgstr ""

#~ msgid "How to register global function."
#~ msgstr ""

#~ msgid ":obj:`matx.get_global_func`"
#~ msgstr ""

#~ msgid "How to get global function."
#~ msgstr ""

